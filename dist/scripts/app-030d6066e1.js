(function(){"use strict";angular.module("fsm",[]);angular.module("troutSpotr",["ngAnimate","ngCookies","ngAria","ui.router","fsm","infinite-scroll"])})();"use strict";angular.module("troutSpotr").directive("regionHeader",["StreamApiService",function(StreamApiService){return{templateUrl:"app/ui/streamList/region/RegionHeaderTemplate.html",restrict:"A",link:function postLink(scope,element,attrs){scope.displayedCounties=[];scope.init=function(){scope.clearCounties()};scope.clearCounties=function(){scope.displayedCounties=[]};scope.loadMoreCounties=function(numberOfCountiesToAdd){var numberOfDisplayedCounties=scope.displayedCounties.length;var numberOfChildCounties=scope.region.children.length;numberOfCountiesToAdd=numberOfCountiesToAdd==null?1:numberOfCountiesToAdd;var numberOfCountiesRemaining=numberOfChildCounties-numberOfDisplayedCounties;numberOfCountiesToAdd=Math.min(numberOfCountiesRemaining,numberOfCountiesToAdd);var finalIndex=numberOfDisplayedCounties+numberOfCountiesToAdd;for(var i=numberOfDisplayedCounties;i<finalIndex;i++){var countyToInject=scope.region.children[i];scope.displayedCounties.push(countyToInject)}};scope.getScrollContainer=function(){return"#js-list-container"};scope.getRegionScrollBodyId=function(region){var result="#"+scope.getRegionId(region);return result};scope.getRegionId=function(region){var result="hdr-region_"+region.id;return result};scope.init()}}}]);"use strict";angular.module("troutSpotr").directive("streamListItemDirective",function(){return{templateUrl:"app/ui/streamList/streamListItem/streamlistitemtemplate.html",restrict:"A",link:function postLink(scope,element,attrs){scope.isSmall=true;scope.isAlertSymbolDisplayed=function(){if(scope.isSmall===false){return false}var isRestrictions=scope.stream.Restrictions.length>0;var isMessage=scope.stream.AlertMessage!=null&&scope.stream.AlertMessage.length>0;if(isRestrictions&&isMessage){return true}};scope.getAlertMessage=function(){return scope.stream.AlertMessage};scope.expand=function(){scope.isSmall=!scope.isSmall;console.log(scope.stream)};scope.getCounties=function(){if(!scope.stream.Counties){return null}return scope.stream.Counties.map(function(c){return c.Name}).join(",")};scope.getAlternativeNames=function(){if(!scope.stream.LocalNames){return null}if(scope.stream.LocalNames.length===0){return""}return"aka "+scope.stream.LocalNames.join(",")}}}});"use strict";angular.module("troutSpotr").directive("streamListItemHeader",function(){return{templateUrl:"app/ui/streamList/streamListItem/StreamListItemHeaderTemplate.html",restrict:"A",link:function postLink(scope,element,attrs){}}});"use strict";angular.module("troutSpotr").directive("countyHeader",["StreamApiService",function(StreamApiService){return{templateUrl:"app/ui/streamList/county/CountyHeaderTemplate.html",restrict:"A",link:function postLink(scope,element,attrs){scope.displayedStreams=[];scope.init=function(){scope.clearStreams()};scope.clearStreams=function(){scope.displayedStreams=[]};scope.loadMoreStreams=function(numberOfStreamsToAdd){var numberOfDisplayedStreams=scope.displayedStreams.length;var numberOfChildStreams=scope.county.children.length;numberOfStreamsToAdd=numberOfStreamsToAdd==null?60:numberOfStreamsToAdd;var numberOfStreamsRemaining=numberOfChildStreams-numberOfDisplayedStreams;numberOfStreamsToAdd=Math.min(numberOfStreamsRemaining,numberOfStreamsToAdd);var finalIndex=numberOfDisplayedStreams+numberOfStreamsToAdd;for(var i=numberOfDisplayedStreams;i<finalIndex;i++){var streamToInject=scope.county.children[i];scope.displayedStreams.push(streamToInject)}};scope.getCountyScrollBodyId=function(county){var result="#"+scope.getCountyId(county);return result};scope.getScrollContainer=function(){return"#js-list-container"};scope.getCountyId=function(county){return"hdr-county_"+county.id};scope.init()}}}]);"use strict";angular.module("troutSpotr").directive("streamRatio",["StreamRatioViewModel",function(StreamRatioViewModel){return{templateUrl:"app/ui/streamRatio/streamratiotemplate.html",restrict:"A",link:function postLink(scope,element,attrs){var model=new StreamRatioViewModel(scope.stream.TroutStreamsLength,scope.stream.PalsLength);scope.streamRatio=model}}}]);"use strict";angular.module("troutSpotr").directive("streamList",["StreamApiService",function(StreamApiService){return{templateUrl:"app/ui/streamList/streamlisttemplate.html",restrict:"A",link:function postLink(scope,element,attrs){scope.stage={isLoaded:false,streams:null,selectedStream:null};scope.getScrollContainer=function(){return"#js-list-container"};scope.$watch("stage.selectedStream",function(newSelectedStream,oldSelectedStream){if(newSelectedStream==null){return}})}}}]);"use strict";angular.module("troutSpotr").controller("StreamlistcontrollerCtrl",["$scope","StreamApiService","TableOfContentsRepository","RegionGeometryService","$anchorScroll",function($scope,StreamApiService,TableOfContentsRepository,RegionGeometryService,$anchorScroll){$scope.isSmallView=false;var getInitialMapState=function(){var mapState={isExpanded:false,isLoading:false,selectedRegionGeometry:null,selectedRegion:null,selectedCounty:null,highlightedStream:null,currentClientCoordinates:[NaN,NaN]};return mapState};$scope.mapState=getInitialMapState();$scope.selectCounty=function(countyId){console.log(countyId)};$scope.selectRegion=function(regionModel){if(regionModel==null){throw new Error("regionModel cannot be null")}var canRetrieveFromCache=false;if(canRetrieveFromCache){$scope.mapState.selectedRegionGeometry=null;$scope.mapState.selectedRegion=[regionModel];return}var stateModel=regionModel.parent;return RegionGeometryService.getRegion(stateModel,regionModel).then(function(newSelectedRegionGeometry){$scope.mapState.selectedRegionGeometry=[newSelectedRegionGeometry];$scope.mapState.selectedRegion=[regionModel];$anchorScroll("region-hdr_"+regionModel.id);return newSelectedRegionGeometry})};$scope.getTableOfContents=function(){return TableOfContentsRepository.getTableOfContents().then(function(toc){return toc})};$scope.bustCache=function(){console.log("busting cache...");TableOfContentsRepository.bustTableOfContentsCache()};$scope.toggleMinimap=function(){if($scope.mapState==null){return}$scope.mapState.isExpanded=!$scope.mapState.isExpanded}}]);"use strict";(function(angular){var fsm=angular.module("fsm");fsm.directive("fsmStickyHeader",["$rootScope",function($rootScope){return{restrict:"EA",replace:false,scope:{scrollBody:"=",scrollStop:"=",scrollableContainer:"=",contentOffset:"=",scrollObject:"=",zIndexOverride:"="},link:function(scope,element,attributes,control){var header=$(element,this);var getContent=function(){var candidateContent;if(content==null||content.length!==1){content=$(scope.scrollBody)}return content};scope.zIndexOverride=scope.zIndexOverride!=null?scope.zIndexOverride:1e4;var content=getContent();var clonedHeader=null;var content=$(scope.scrollBody);var scrollableContainer=$(scope.scrollableContainer);var contentOffset=scope.contentOffset||0;if(scrollableContainer.length===0){scrollableContainer=$(window)}function setColumnHeaderSizes(){if(clonedHeader.is("tr")||clonedHeader.is("thead")){var clonedColumns=clonedHeader.find("th");header.find("th").each(function(index,column){var clonedColumn=$(clonedColumns[index]);clonedColumn.css("width",column.offsetWidth+"px")})}}function determineVisibility(){var scrollTop=scrollableContainer.scrollTop()+scope.scrollStop;var currentContent=getContent();if(currentContent.length!==1){return}var contentTop=currentContent.offset().top;var contentBottom=contentTop+currentContent.outerHeight(false);if(scrollTop>contentTop&&scrollTop<contentBottom){if(!clonedHeader){createClone();clonedHeader.css({visibility:"visible"})}if(scrollTop<contentBottom&&scrollTop>contentBottom-clonedHeader.outerHeight(false)){var top=contentBottom-scrollTop+scope.scrollStop-clonedHeader.outerHeight(false);clonedHeader.css("top",top+"px")}else{calculateSize()}}else{if(clonedHeader){header.remove();header=clonedHeader;clonedHeader=null;header.removeClass("fsm-sticky-header");header.css({position:"relative",left:0,top:0,width:"auto","z-index":0,visibility:"visible"})}}}function calculateSize(){clonedHeader.css({top:scope.scrollStop,width:header.outerWidth(),left:header.offset().left});setColumnHeaderSizes()}function createClone(){$rootScope.$broadcast("header-clone",scope.scrollObject);clonedHeader=header;header=clonedHeader.clone();clonedHeader.after(header);clonedHeader.addClass("fsm-sticky-header");clonedHeader.css({position:"fixed","z-index":scope.zIndexOverride,visibility:"hidden"});calculateSize()}scrollableContainer.on("scroll.fsmStickyHeader",determineVisibility).trigger("scroll");scrollableContainer.on("resize.fsmStickyHeader",determineVisibility);scope.$on("$destroy",function(){scrollableContainer.off(".fsmStickyHeader")})}}}]);fsm.directive("fsmMenu",["$location",function($location){return{restrict:"A",scope:{},link:function(scope,el,attrs){var navigationMenu=angular.element(el);var menuTitles=navigationMenu.find(".fsm-menu-title");var menuItems=navigationMenu.find("[tc-menu-item]:visible");var activeMenu=0;function menuOnClick(e){var menuTitle=angular.element(e.currentTarget);var submenu=menuTitle.next(".fsm-sub-menu");submenu.slideToggle("fast",function(){var chevron=menuTitle.children("[class*='fa-chevron']");chevron.toggleClass("fa-chevron-down fa-chevron-up");menuItems=navigationMenu.find("[tc-menu-item]:visible")})}function menuOnKeydown(e){activeMenu=getCurrentMenuItem();if(e.keyCode===9){tabOutOfMenu(e)}else if(e.keyCode===13||e.keyCode===37||e.keyCode===39){triggerMenuItem(e)}else if(e.keyCode===38||e.keyCode===40){highlightMenuItem(e)}}function tabOutOfMenu(e){if(e.shiftKey){$("[fsm-menu-button]").focus()}else{var firstTabItem=$("[tabindex=1]");if(firstTabItem.length==0){return}else{firstTabItem.focus()}}e.preventDefault();e.stopPropagation()}function triggerMenuItem(e){e.currentTarget=$(menuItems[activeMenu]).children("a").first();menuOnClick(e)}function highlightMenuItem(e){e.preventDefault();e.stopPropagation();if(e.keyCode===38){if(activeMenu>0){$(menuItems[activeMenu-1]).children("a").first().focus()}else{$(menuItems[menuItems.length-1]).children("a").first().focus()}}else if(e.keyCode===40){if(activeMenu<menuItems.length-1){$(menuItems[activeMenu+1]).children("a").first().focus()}else{$(menuItems[0]).children("a").first().focus()}}}function getCurrentMenuItem(){var focusedMenu=navigationMenu.find(":focus");if(focusedMenu.length===1){return menuItems.index(focusedMenu.parent("[tc-menu-item]").first())}return menuItems.index(navigationMenu.find("[tc-menu-item].active").first())}function menuOnFocus(e){e.preventDefault();e.stopPropagation();activeMenu=getCurrentMenuItem();$(menuItems[activeMenu]).children("a").first().focus()}menuTitles.click(menuOnClick);navigationMenu.keydown(menuOnKeydown);navigationMenu.focus(menuOnFocus);scope.$watch(function(){return $location.path()},function(path){var allMenuItems=el.find("a[href^='#']");angular.forEach(allMenuItems,function(menuItem){var menu=angular.element(menuItem);var link=menu.attr("href").split("#")[1];if(path.indexOf(link)==0){angular.element(menuItem.parentElement).addClass("active");var submenus=menu.parents(".fsm-sub-menu");submenus.show();var chevrons=submenus.prev().children("[class*='fa-chevron']");chevrons.removeClass("fa-chevron-down");chevrons.addClass("fa-chevron-up")}else{angular.element(menuItem.parentElement).removeClass("active")}});menuItems=navigationMenu.find("[tc-menu-item]:visible")})}}}]);fsm.directive("fsmMenuButton",function(){return{restrict:"EA",replace:false,scope:{},link:function(scope,element,attributes,control){var menuButton=$(element,this);menuButton.addClass("fsm-menu-button");menuButton.keydown(menuOnKeydown);$("body").keydown(bodyOnKeydown);function bodyOnKeydown(e){if(e.keyCode===77&&e.ctrlKey&&e.altKey){if(isMenuClosed()){menuOnClick()}$("[fsm-menu]").focus()}else if(e.keyCode===77&&e.ctrlKey){menuButton.focus();menuOnClick()}}function isMenuClosed(){return $("body").hasClass("fsm-menu-toggle")}function menuOnClick(){$("body").toggleClass("fsm-menu-toggle");setMenuSpin();setTimeout(setMenuSpin,50)}function menuOnKeydown(e){if(e.keyCode===32||e.keyCode===13){e.preventDefault();e.stopPropagation();menuOnClick()}}function setMenuSpin(){menuButton.find(".fsm-menu-button-open").toggleClass("fsm-spin-forward");menuButton.find(".fsm-menu-button-close").toggleClass("fsm-spin-backward")}menuButton.on("click.fsmMenuButton",menuOnClick);scope.$on("$destroy",function(){menuButton.off(".fsmMenuButton")})}}});fsm.directive("fsmBigData",["$filter",function($filter){return{restrict:"AE",scope:{},replace:false,transclude:true,link:function(scope,element,attrs,controller,transclude){var orderBy=$filter("orderBy");var currentPage=0;var pagedDataName=attrs.fsmBigData.split(" of ")[0];var rightHandExpression=attrs.fsmBigData.split(" of ")[1];var pageSize=parseInt(rightHandExpression.split(" take ")[1],10);var sourceData=rightHandExpression.split(" take ")[0];var rawData=[];var sortedData=[];var pagedData=[];var page=$(window);var sortTypes=["None","Ascending","Descending"];var sortColumns=[];transclude(function(clone,transcludedScope){transcludedScope.sortTypes=sortTypes;element.append(clone);transcludedScope[pagedDataName]=pagedData;function nextPage(){var dataSlice=sortedData.slice(pageSize*currentPage,pageSize*(currentPage+1));if(dataSlice.length>0){pagedData.push.apply(pagedData,dataSlice);currentPage++}}function renderData(){if(sortColumns.length){sortedData=orderBy(rawData,sortColumns)}else{sortedData=rawData}pagedData.length=0;currentPage=0;nextPage()}function addSortColumn(columnName,sortType){for(var i=0;i<sortColumns.length;i++){if(sortColumns[i].indexOf(columnName)>-1){sortColumns.splice(i,1)}}if(sortType>0){var direction="";if(sortTypes[sortType]==="Descending"){direction="-"}sortColumns.unshift(direction+columnName)}renderData()}function onPageScroll(){var s=$(window).scrollTop();var d=$(document).height();var c=$(window).height();var scrollPercent=s/(d-c);if(scrollPercent>.98){transcludedScope.$apply(nextPage)}}transcludedScope.$parent.$watchCollection(sourceData,function(newData){if(newData){rawData=newData;renderData()}});transcludedScope.addSortColumn=addSortColumn;page.on("scroll.fsmBigData",onPageScroll).trigger("scroll");transcludedScope.$on("$destroy",function(){page.off(".fsmBigData")})})}}}]);fsm.directive("fsmSort",[function(){var sortIconTemplate='<i class="fa fa-sort"></i>';return{restrict:"AE",replace:false,scope:{},link:function(scope,element,attrs){var columnHeader=element;var columnName=attrs.fsmSort;var sortIcon=angular.element(sortIconTemplate);columnHeader.append("&nbsp;");columnHeader.append(sortIcon);var currentSortType=0;function swapIcons(){sortIcon.removeClass("fa-sort-desc fa-sort-asc fa-sort");var classToAdd="fa-sort";if(scope.$parent.sortTypes[currentSortType]==="Ascending"){classToAdd="fa-sort-asc"}else if(scope.$parent.sortTypes[currentSortType]==="Descending"){classToAdd="fa-sort-desc"}sortIcon.addClass(classToAdd)}function applySort(){currentSortType++;if(currentSortType==scope.$parent.sortTypes.length){currentSortType=0}scope.$apply(scope.$parent.addSortColumn(columnName,currentSortType));swapIcons()}columnHeader.css({cursor:"pointer"});columnHeader.on("click.fsmSort",applySort);columnHeader.on("keydown.fsmSort",function(e){if(e.keyCode===13){applySort();e.preventDefault();e.stopPropagation()}});scope.$on("$destroy",function(){columnHeader.off(".fsmSort")})}}}])})(window.angular);"use strict";angular.module("troutSpotr").directive("streamLine",["LinearReferenceViewModel",function(LinearReferenceViewModel){return{templateUrl:"app/ui/streamLine/streamlinetemplate.html",restrict:"A",link:function(scope,element,attrs){var length=parseFloat(scope.stream.LengthMiles);if(length<=0){return}var inverseLength=1/length;scope.stage={width:element.width()};var createTickMarks=function(LengthMiles){var clampedLength=Math.floor(length);var tickMarks=[];if(clampedLength<1){tickMarks.push({xOffset:0,width:1,height:3,yOffset:7});return tickMarks}var tickWidth=scope.stage.width/LengthMiles;for(var i=0;i<=clampedLength;i++){tickMarks.push({xOffset:i*tickWidth,width:1.5,height:4,yOffset:8})}return tickMarks};scope.drawLines=function(){var length=parseFloat(scope.stream.LengthMiles);var inverseLength=1/length;scope.streamLine=d3.select(element[0]).append("svg").attr("class","stream-line").attr("width",scope.stage.width).attr("height",16).attr("xmlns","http://www.w3.org/2000/svg");scope.publicSegments=scope.stream.Pal.Sections.map(function(segment){return new LinearReferenceViewModel(segment,inverseLength)});scope.streamLine.publicLand=scope.streamLine.append("g").attr("class","stream-line_public-land");scope.streamLine.publicLand.selectAll("rect").data(scope.publicSegments).enter().append("rect").attr("x",function(d){return d.xOffset*scope.stage.width}).attr("y",0).attr("width",function(d){return d.width*scope.stage.width}).attr("height",11).attr("rx",4).attr("ry",4).attr("class","public-land");scope.streamLine.stream=scope.streamLine.append("g").attr("class","stream-line_stream").append("rect").attr("x",0).attr("y",3).attr("height",5).attr("width",scope.stage.width);scope.lakes=scope.stream.Lakes.Sections.map(function(segment){return new LinearReferenceViewModel(segment,inverseLength)});scope.accessPoints=scope.stream.AccessPoints;scope.streamLine.lakes=scope.streamLine.append("g").attr("class","stream-line_stream");scope.streamLine.lakes.selectAll("rect").data(scope.lakes).enter().append("rect").attr("x",function(d){return d.xOffset*scope.stage.width}).attr("y",1).attr("width",function(d){return d.width*scope.stage.width}).attr("height",9).attr("rx",4).attr("ry",4).attr("class","stream-line_stream");scope.publicSegments=scope.stream.TroutStreams.Sections.map(function(segment){return new LinearReferenceViewModel(segment,inverseLength)});scope.streamLine.troutStreamSections=scope.streamLine.append("g").attr("class","stream-line_route");scope.streamLine.append("g").attr("class","stream-line_route").selectAll("g").data(scope.publicSegments).enter().append("g").append("rect").attr("x",function(d){return d.xOffset*scope.stage.width}).attr("y",3).attr("width",function(d){return d.width*scope.stage.width}).attr("height",5).attr("class","stream-line_route");scope.stream.Restrictions.forEach(function(restriction,index){var restrictionModels=restriction.Sections.map(function(segment){var linearReferenceViewModel=new LinearReferenceViewModel(segment,inverseLength);segment.segment=linearReferenceViewModel;return segment});scope.streamLine.append("g").attr("class",index===0?"stream-line_restriction":"stream-line_restriction_secondary").selectAll("g").data(restrictionModels).enter().append("g").append("rect").attr("x",function(d){return d.segment.xOffset*scope.stage.width}).attr("y",3).attr("width",function(d){return d.segment.width*scope.stage.width}).attr("height",5).attr("class","restriction")});scope.streamLine.roadIntersections=scope.streamLine.append("g").attr("class","stream-line_roadIntersections");scope.streamLine.roadIntersections.selectAll("circle").data(scope.accessPoints).enter().append("circle").attr("cy",5).attr("r",2).attr("cx",function(d){return(1-d.LinearOffset/length)*scope.stage.width}).attr("class",function(d){return d.IsOverOrNearPublicLand?"roadIntersetion_public":"roadIntersetion_private"});var tickMarks=createTickMarks(length);var firstMark=tickMarks[0];firstMark.width=1;firstMark.height=3;scope.streamLine.tickMarks=scope.streamLine.append("g").attr("class","stream-line_grid-lines").selectAll("rect").data(tickMarks).enter().append("rect").attr("x",function(d){return scope.stage.width-d.xOffset-d.width}).attr("y",function(d){return d.yOffset}).attr("width",function(d){return d.width}).attr("height",function(d){return d.height}).attr("class","tick")};scope.drawLines()}}}]);"use strict";angular.module("troutSpotr").directive("speciesSummary",function(){return{templateUrl:"app/ui/speciesSummary/speciessummarytemplate.html",restrict:"A",link:function postLink(scope,element,attrs){}}});"use strict";angular.module("troutSpotr").directive("restrictionLegend",function(){return{templateUrl:"app/ui/restrictions/restrictionlegendtemplate.html",restrict:"A",link:function postLink(scope,element,attrs){console.log("restrictionlegend directive",scope.stream)}}});"use strict";var MINI_MAP_CLASS=".js-mini-map";angular.module("troutSpotr").directive("miniMapDirective",["$rootScope","GeometryApiService","$q","$timeout",function($rootScope,GeometryApiService,$q,$timeout){return{templateUrl:"app/ui/miniMap/minimaptemplate.html",restrict:"A",link:function postLink(scope,element,attrs){scope.minimapState={isLoading:true,regionGeometries:null,selectedRegionId:null,selectedCountyId:null,width:75,height:45,isMacro:true,loadingRegion:d3.select(null)};scope.active=d3.select(null);scope.selectedCounty=d3.select(null);$rootScope.$on("county-select",function(event,item){console.log(item)});$rootScope.$on("header-clone",function(event,item){if(item==null){return}if(item.type==="region"){$timeout(function(){scope.minimapState.selectedRegionId=item.id;scope.$apply()})}if(item.type==="county"){$timeout(function(){scope.minimapState.selectedCountyId=item.name;scope.$apply()})}});var unwatchRegionId=scope.$watch(function(){return scope.minimapState.selectedRegionId},function(newRegionId,oldRegionId){if(newRegionId==null){return}if(newRegionId===oldRegionId){return}var soughtRegion=scope.currentRegions.filter(function(f){return f.id===newRegionId});if(soughtRegion.length>0&&newRegionId!==oldRegionId){zoomToGeometry(soughtRegion[0])}});var unwatchCountyId=scope.$watch(function(){return scope.minimapState.selectedCountyId},function(newCounty,oldCounty){if(newCounty==null){return}var soughtCounty=scope.currentCounties.filter(function(f){return f.name===newCounty});if(soughtCounty.length>0&&newCounty!==oldCounty){selectCounty(soughtCounty[0])}});var unwatchGeometries=scope.$watch(function(){return scope.minimapState.regionGeometries},function(newGeometries,oldGeometries){if(newGeometries==null){return}drawGeometries(newGeometries)});var drawGeometries=function(geometries){var root=d3.select(element[0])};var highlightCounty=function(countyId){console.log("highlight county")};var zoomToRegion=function(regionId){console.log("zoom to region")};var initializeMap=function(stateObject){scope.projection=d3.geo.albersUsa().scale(1).translate([0,0]);scope.path=d3.geo.path().projection(scope.projection).pointRadius(.15);var state=stateObject.geometry;var b=scope.path.bounds(state),s=.95/Math.max((b[1][0]-b[0][0])/scope.minimapState.width,(b[1][1]-b[0][1])/scope.minimapState.height),t=[(scope.minimapState.width-s*(b[1][0]+b[0][0]))/2,(scope.minimapState.height-s*(b[1][1]+b[0][1]))/2];scope.projection.scale(s).translate(t);scope.zoom=d3.behavior.zoom().translate([0,0]).scale(1).scaleExtent([1,8]).size([scope.minimapState.width,scope.minimapState.height]).on("zoom",zoomed);scope.svg=d3.select(element[0]).select(MINI_MAP_CLASS).append("svg").attr("viewBox","0 0 "+scope.minimapState.width+" "+scope.minimapState.height).attr("preserveAspectRatio","xMinYMin meet").attr("class","minimap-root").on("click",stopped,true);scope.root=scope.svg.append("g").attr("class","minimap-geography");scope.root.append("rect").attr("class","minimap-geography_background").attr("width","100%").attr("height","100%").on("click",onBackgroundClick);scope.counties=scope.root.append("g").attr("class","minimap-geography minimap-geogrpahy_counties");scope.states=scope.root.append("g").attr("class","minimap-geography minimap-geogrpahy_states");scope.streams=scope.root.append("g").attr("class","minimap-geography minimap-geogrpahy_streams");scope.regions=scope.root.append("g").attr("class","minimap-geography minimap-geogrpahy_regions")};var onRegionClick=function(region,regionId){var isMacro=scope.minimapState.isMacro;if(isMacro){onLoadRegion.bind(this)(region);scope.minimapState.selectedRegionId=region.id;scope.selectRegion(region).then(function(geometry){$timeout(function(){resetLoadRegion();$timeout(minifyMinimap,500)},1e3)})}else{macrofyMinimap()}$timeout(function(){scope.$apply()})};var onBackgroundClick=function(){var isMacroMode=scope.minimapState.isMacro;if(isMacroMode){minifyMinimap()}else{macrofyMinimap()}$timeout(function(){scope.$apply()})};var minifyMinimap=function(){scope.minimapState.isMacro=false};var macrofyMinimap=function(){scope.minimapState.isMacro=true;reset()};var drawGeometryToMap=function(states,regions,counties){scope.counties.selectAll("path.minimap-geography_county").data(counties,function(d){return d.id}).enter().append("path").attr("d",function(d){return scope.path(d.geometry)}).attr("data-id",function(d){return getFipsCodeSelector(d)}).attr("class","minimap-geography_county");scope.regions.selectAll("path.minimap-geogrpahy_region").data(regions,function(d){return d.id}).enter().append("path").attr("class","minimap-geogrpahy_region").attr("data-id",function(d){return d.id}).attr("id",function(d){return"region_"+d.id}).attr("data-name",function(d){return d.shortName}).attr("d",function(d){return scope.path(d.geometry)}).on("click",onRegionClick)};function reset(){scope.active.classed("active",false);scope.active=d3.select(null);scope.svg.transition().duration(300).call(scope.zoom.translate([0,0]).scale(1).event)}function zoomed(){scope.root.style("stroke-width",1.5/d3.event.scale+"px");scope.root.attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}function onLoadRegion(regionElement){resetLoadRegion();scope.minimapState.loadingRegion=d3.select(this).classed("minimap-geogrpahy_region_loading",true);var arrayOfStreams=regionElement.children.map(function(county){return county.children});var selectedStreams=_.unique(_.flatten(arrayOfStreams),"Id");var streamObjects=scope.streams.selectAll("path.minimap-geography_stream").data(selectedStreams,function(d){return d.Id});streamObjects.enter().append("path").attr("class","minimap-geography_stream").attr("data-id",function(d){return d.id}).attr("id",function(d){return"streamPoint_"+d.id}).attr("data-name",function(d){return d.name}).attr("d",function(d){return scope.path(d.geometry)}).style("opacity",0).transition().delay(200).duration(750).style("opacity",1);streamObjects.exit().transition().duration(300).style("opacity",0).remove()}function resetLoadRegion(){if(scope.minimapState.loadingRegion==null){return}scope.minimapState.loadingRegion.classed("minimap-geogrpahy_region_loading",false);scope.minimapState.loadingRegion=d3.select(null)}function zoomToGeometry(d,t){if(scope.active.node()===this){return reset()}scope.active.classed("active",false);scope.active=d3.select(element[0]).classed("active",true);var bounds=scope.path.bounds(d.geometry),dx=bounds[1][0]-bounds[0][0],dy=bounds[1][1]-bounds[0][1],x=(bounds[0][0]+bounds[1][0])/2,y=(bounds[0][1]+bounds[1][1])/2,scale=.95/Math.max(dx/scope.minimapState.width,dy/scope.minimapState.height),translate=[scope.minimapState.width/2-scale*x,scope.minimapState.height/2-scale*y];scope.svg.transition().delay(200).duration(750).call(scope.zoom.translate(translate).scale(scale).event)}function getFipsCode(countyFeature){if(countyFeature==null){return""}var fips=countyFeature.statefp+countyFeature.countyfp;return fips}function getFipsCodeSelector(countyFeature){return"county_"+getFipsCode(countyFeature)}function selectCounty(d){var fips=getFipsCodeSelector(d);var attribute="[data-id="+fips+"]";var t=scope.counties.select(attribute).node();if(scope.selectedCounty.node()===t){return}scope.selectedCounty.classed("active",false);scope.selectedCounty=d3.select(t).classed("active",true)}function stopped(){if(d3.event.defaultPrevented)d3.event.stopPropagation()}scope.getTableOfContents().then(function(toc){var states=_.map(toc);var regions=_(states).pluck("children").flatten().value();var counties=_(regions).pluck("children").flatten().value();scope.currentState=states[0];scope.currentCounties=counties;scope.currentRegions=regions;var minStreamCount=0;var countyStreamCounts=scope.currentCounties.map(function(feat){return Math.max(0,feat.stream_count)});var maxStreamCount=d3.max(countyStreamCounts);scope.countyChoroplethScale=d3.scale.linear().domain([minStreamCount,maxStreamCount]).range(["#FFFFBB","#BB00CC"]);scope.minimapState.isLoading=false;initializeMap(scope.currentState);drawGeometryToMap(states,regions,counties)});scope.$on("$destroy",function(){unwatchRegionId();unwatchCountyId();unwatchGeometries();unwatchTableOfContents()})}}}]);(function(){"use strict";angular.module("troutSpotr").controller("MainController",["$scope","StreamApiService","TableOfContentsRepository","RegionGeometryService","$anchorScroll",function($scope,StreamApiService,TableOfContentsRepository,RegionGeometryService,$anchorScroll){$scope.isSmallView=true;var getInitialMapState=function(){var mapState={isExpanded:false,isLoading:false,selectedRegionGeometry:null,selectedRegion:null,selectedCounty:null,highlightedStream:null,currentClientCoordinates:[NaN,NaN]};return mapState};$scope.mapState=getInitialMapState();$scope.selectCounty=function(countyId){console.log(countyId)};$scope.selectRegion=function(regionModel){if(regionModel==null){throw new Error("regionModel cannot be null")}var canRetrieveFromCache=false;if(canRetrieveFromCache){$scope.mapState.selectedRegionGeometry=null;$scope.mapState.selectedRegion=[regionModel];return}var stateModel=regionModel.parent;return RegionGeometryService.getRegion(stateModel,regionModel).then(function(newSelectedRegionGeometry){$scope.mapState.selectedRegionGeometry=[newSelectedRegionGeometry];$scope.mapState.selectedRegion=[regionModel];$anchorScroll("region-hdr_"+regionModel.id);return newSelectedRegionGeometry})};$scope.getTableOfContents=function(){return TableOfContentsRepository.getTableOfContents().then(function(toc){return toc})};$scope.bustCache=function(){console.log("busting cache...");TableOfContentsRepository.bustTableOfContentsCache()};$scope.toggleMinimap=function(){if($scope.mapState==null){return}$scope.mapState.isExpanded=!$scope.mapState.isExpanded}}])})();angular.module("troutSpotr").factory("RectangleLayoutService",[function(){"use strict";function RectangleLayoutService(width,height){this.width=width;this.height=height}var proto=RectangleLayoutService.prototype;function getScale(width,height,itemLength){return Math.sqrt(itemLength/(width*height))}function getXGivenY(width,height,y){return width/height*y}function getYGivenX(width,height,x){return height/width*x}function pythagoreanTheorem(x,y){return Math.sqrt(x*x+y*y)}proto.getBoundingBox=function(numberOfItems){if(numberOfItems===1){return[1,1]}var scale=getScale(this.width,this.height,numberOfItems);var minimumXPosition=this.width*scale;var minimumYPosition=this.height*scale;var xPrime=Math.ceil(minimumXPosition);var yPrime=Math.ceil(minimumYPosition);var newYLength=getYGivenX(this.width,this.height,xPrime);var yZLength=pythagoreanTheorem(xPrime,newYLength);var newXLength=getXGivenY(this.width,this.height,yPrime);var xZLength=pythagoreanTheorem(newXLength,yPrime);var candidate=function(){if(xZLength>yZLength){return[xPrime,Math.floor(minimumYPosition)]}else if(yZLength>xZLength){return[Math.floor(minimumXPosition),yPrime]}return[Math.ceil(minimumXPosition),Math.ceil(minimumYPosition)]};var result=candidate();if(result[0]*result[1]<numberOfItems){return[xPrime,yPrime]}return result};return RectangleLayoutService}]);angular.module("troutSpotr").directive("accessPointSummaryTally",["RectangleLayoutService",function(RectangleLayoutService){"use strict";return{templateUrl:"app/ui/accessPointSummary/AccessPointSummaryTallyTemplate.html",restrict:"A",link:function postLink(scope,element){var ROOT_CLASS=".js-tally-root";var WIDTH=32;var HEIGHT=24;var troutStreamIntersections=scope.stream.AccessPoints.filter(function(i){return i.IsOverOrNearTroutStreamSection}).sort(function(a){return a.IsOverOrNearPublicLand?-100:100});scope.denominator=troutStreamIntersections.length;
var publicTroutStreamIntersections=troutStreamIntersections.filter(function(i){return i.IsOverOrNearPublicLand});scope.numerator=publicTroutStreamIntersections.length;scope.rows=Math.ceil(Math.sqrt(scope.denominator));if(scope.rows===0){return}var generator=new RectangleLayoutService(3,2);var dimensions=generator.getBoundingBox(scope.denominator);var numberOfColumns=dimensions[0];var numberOfRows=dimensions[1];var boxWidth=3;var widthOfContainer=numberOfColumns*boxWidth;var heightOfContainer=numberOfRows*boxWidth;var offset=[(WIDTH-widthOfContainer)*.5,(HEIGHT-heightOfContainer)*.5];scope.root=d3.select(element[0]).select(ROOT_CLASS);scope.container=scope.root.append("g").attr("class","access-points").attr("transform","translate("+offset[0]+", "+offset[1]+")");scope.container.selectAll("circle").data(troutStreamIntersections).enter().append("circle").attr("data-length",scope.denominator).attr("data-width",numberOfColumns).attr("data-height",numberOfRows).attr("cx",function(d,index){var xPosition=index%numberOfColumns*(boxWidth*1);return xPosition}).attr("cy",function(d,index){var yPosition=Math.floor(index/numberOfColumns)*(boxWidth*1);return yPosition}).attr("r",boxWidth*.5).attr("class",function(d){return d.IsOverOrNearPublicLand?"numerator":"denominator"})}}}]);angular.module("troutSpotr").directive("accessPointSummary",[function(){"use strict";return{templateUrl:"app/ui/accessPointSummary/AccessPointSummaryTemplate.html",restrict:"A",link:function postLink(scope){var troutStreamIntersections=scope.stream.AccessPoints.filter(function(i){return i.IsOverOrNearTroutStreamSection});scope.denominator=troutStreamIntersections.length;var publicTroutStreamIntersections=troutStreamIntersections.filter(function(i){return i.IsOverOrNearPublicLand});scope.numerator=publicTroutStreamIntersections.length}}}]);angular.module("troutSpotr").factory("TableOfContentsRepository",["BaseApiService","RegionGeometryService","HierarchicalGeometryViewModel",function(BaseApiService,RegionGeometryService,HierarchicalGeometryViewModel){"use strict";var TABLE_OF_CONTENTS_CACHE_KEY="tableOfContents";var COUNTIES_CACHE_KEY="counties";var REGIONS_CACHE_KEY="regions";var TableOfContentsRepository=function(){BaseApiService.call(this);this.logCache()};var proto=TableOfContentsRepository.prototype=Object.create(BaseApiService.prototype);proto.bustTableOfContentsCache=function(){var key=TABLE_OF_CONTENTS_CACHE_KEY;this.cache.remove(TABLE_OF_CONTENTS_CACHE_KEY)};proto.getTableOfContents=function(){var key=TABLE_OF_CONTENTS_CACHE_KEY;if(this.cache.get(key)){console.log("found in cache");return this.cache.get(key)}var promise=this.doCall({},"assets/data/tableOfContents.topo.json").then(function(regionTopoJson){var state=topojson.feature(regionTopoJson,regionTopoJson.objects.state);var regions=topojson.feature(regionTopoJson,regionTopoJson.objects.region);var counties=topojson.feature(regionTopoJson,regionTopoJson.objects.county);var streams=topojson.feature(regionTopoJson,regionTopoJson.objects.streamProperties);var stateHash=_(state.features).map(function(feature){var stateModel=new HierarchicalGeometryViewModel;var prop=feature.properties;stateModel.id=prop.gid;stateModel.name=prop.name;stateModel.centroidLatitude=NaN;stateModel.shortName=prop.short_name;stateModel.centroidLongitude=NaN;stateModel.parent=null;stateModel.type="state";stateModel.children=[];stateModel.geometry=feature;return stateModel}).indexBy("id").value();var regionHash=_(regions.features).map(function(feature){var regionModel=new HierarchicalGeometryViewModel;regionModel.shortName=feature.properties.name;regionModel.id=feature.properties.gid;regionModel.name=feature.properties.name;regionModel.geometry=feature;regionModel.type="region";return regionModel}).sortBy("name").indexBy("id").value();var countyhash=_(counties.features).filter(function(feature){return feature.properties.stream_count>0}).map(function(feature){var countyModel=new HierarchicalGeometryViewModel;var properties=feature.properties;countyModel.id=properties.gid;countyModel.name=properties.name;countyModel.geometry=feature;_.extend(countyModel,properties);countyModel.type="county";return countyModel}).sortBy("name").indexBy("id").value();var countyByRegion=_(countyhash).groupBy("region_id").value();var minnesota=stateHash["49"];var regionByState=_(regionHash).groupBy(function(){return minnesota.id}).value();var streamHash=_(streams.features).map(function(feature){var streamModel=new HierarchicalGeometryViewModel;var properties=feature.properties;streamModel.id=properties.Id;streamModel.name=properties.Name;streamModel.geometry=feature;streamModel.centroidLongitude=properties.CentroidLongitude;streamModel.centroidLatitude=properties.CentroidLatitude;_.extend(streamModel,properties);streamModel.type="streamCentroid";return streamModel}).sortBy("name").indexBy("id").value();_.forEach(stateHash,function(state){var stateId=state.id;var regions=regionByState[stateId];state.children=regions;_.forEach(state.children,function(region){var regionId=region.id;var counties=countyByRegion[regionId];region.children=counties;region.parent=state;_.forEach(region.children,function(c){c.parent=region})})});_.forEach(streamHash,function(stream){_.forEach(stream.Counties,function(streamCountyModel){var countyModel=countyhash[streamCountyModel.Id];countyModel.children.push(stream)})});this.logCache();return stateHash}.bind(this));this.cache.put(key,promise);return promise};TableOfContentsRepository.prototype=proto;return new TableOfContentsRepository}]);"use strict";angular.module("troutSpotr").factory("HierarchicalGeometryViewModel",function(){function HierarchicalGeometryViewModel(){this.init()}HierarchicalGeometryViewModel.prototype={id:null,name:"",shortName:"",geometry:null,centroidLatitude:NaN,centroidLongitude:NaN,type:null,parent:null,children:[],init:function(){this.id=null;this.name="";this.shortName="";this.geometry=null;this.centroidLongitude=NaN;this.centroidLatitude=NaN;this.parent=null;this.children=[]}};return HierarchicalGeometryViewModel});"use strict";angular.module("troutSpotr").factory("HierarchicalGeometryCollection",["BaseCollection","HierarchicalGeometryViewModel",function(BaseCollection,HierarchicalGeometryViewModel){function HierarchicalGeometryCollection(data){BaseCollection.call(this,data)}var proto=HierarchicalGeometryCollection.prototype=Object.create(BaseCollection.prototype);HierarchicalGeometryCollection.prototype.constructor=HierarchicalGeometryCollection;proto.model=HierarchicalGeometryViewModel;return HierarchicalGeometryCollection}]);"use strict";angular.module("troutSpotr").factory("RegionRepositoryService",["RegionGeometryService","TableOfContentsRepository","$q",function(RegionGeometryService,TableOfContentsRepository,$q){var RegionRepositoryService=function(){};var proto={getRegions:function(){return TableOfContentsRepository.getTableOfContents().then(function(states){console.log("got em")})},isCached:function(regionid){return false},cacheRegion:function(regionId){return true},uncacheRegion:function(regionId){return true},getRegion:function(regionId){if(this.isCached()){}}};RegionRepositoryService.prototype=proto;return new RegionRepositoryService}]);"use strict";var REGION_CACHE_KEY="region";var createKey=function(stateId,regionId){return REGION_CACHE_KEY+"_"+stateId+"_"+regionId};angular.module("troutSpotr").factory("RegionGeometryService",["BaseApiService","RegionApiService","HierarchicalGeometryViewModel",function(BaseApiService,RegionApiService,HierarchicalGeometryViewModel){var RegionGeometryService=function(){BaseApiService.call(this)};var proto=RegionGeometryService.prototype=Object.create(BaseApiService.prototype);proto.getRegion=function(stateModel,regionModel){if(stateModel==null||stateModel.shortName==null){throw new Error("state cannot be null")}if(regionModel==null||regionModel.shortName==null){throw new Error("region cannot be null")}var stateId=stateModel.shortName;var regionId=regionModel.shortName;var regionKey=createKey(stateId,regionId);if(this.cache.get(regionKey)){console.log("found in cache");return this.cache.get(regionKey)}var promise=RegionApiService.getRegion(stateId,regionId).then(function(geometry){console.log("new geom",geometry);return geometry});this.cache.put(regionKey,promise);return promise};RegionGeometryService.prototype=proto;return new RegionGeometryService}]);"use strict";var createPath=function(stateId,regionId){return stateId+"/"+regionId+".topo.json"};angular.module("troutSpotr").factory("RegionApiService",["BaseApiService",function(BaseApiService){var RegionApiService=function(){BaseApiService.call(this);this.logCache()};var proto=RegionApiService.prototype=Object.create(BaseApiService.prototype);proto.getRegion=function(stateId,regionId){if(stateId==null){throw new Error("stateId cannot be null")}if(regionId==null){throw new Error("regionId cannot be null")}var path=createPath(stateId,regionId);return this.doCall({},"assets/data/"+path)};RegionApiService.prototype=proto;return new RegionApiService}]);"use strict";angular.module("troutSpotr").factory("StreamRatioViewModel",function(){var StreamRatioViewModel=function(totalLength,publicLandLength){this.totalLength=0;this.publicLandLength=0;this.init(totalLength,publicLandLength)};var proto=StreamRatioViewModel.prototype;proto.init=function(totalLength,publicLandLength){if(totalLength==null||publicLandLength<0){throw new Error("totalLength cannot be null or less than 0")}if(publicLandLength==null||publicLandLength<0){throw new Error("publicLength cannot be null or less than 0")}if(publicLandLength>totalLength){publicLandLength=totalLength}this.totalLength=totalLength;this.publicLandLength=publicLandLength;var computeRadiusFromLength=function(length){var area=Math.sqrt(length/Math.PI);return area};this.waterRadius=computeRadiusFromLength(this.totalLength);var publicLandLengthTOWaterLengthRatio=this.publicLandLength/this.totalLength;this.publicLandRadius=this.waterRadius*publicLandLengthTOWaterLengthRatio};return StreamRatioViewModel});"use strict";angular.module("troutSpotr").factory("StreamApiService",["$rootScope","$cacheFactory","$http","$q","$timeout",function($rootScope,$cacheFactory,$http,$q,$timeout){function StreamApiService(){}StreamApiService.prototype={getStreams:function(){var deferred=$q.defer();$timeout(function(){var gettingData=$http.get("./data/trout-dash-minnesota.json").then(function(response){return response.data});deferred.resolve(gettingData)},1e3);return deferred.promise},getRegions:function(){var deferred=$q.defer();$timeout(function(){var gettingData=$http.get("./data/regionDetails.json").then(function(response){return response.data});deferred.resolve(gettingData)},1e3);return deferred.promise}};return new StreamApiService}]);"use strict";angular.module("troutSpotr").factory("LinearReferenceViewModel",function(){var StreamLineViewModel=function(lineSegment,inverseLength){this.lineSegment=null;this.xOffset=0;this.width=0;this.init(lineSegment,inverseLength)};StreamLineViewModel.prototype.init=function(lineSegment,inverseLength){this.lineSegment=lineSegment;var stop=lineSegment.Stop*inverseLength;var start=lineSegment.Start*inverseLength;this.xOffset=1-stop;this.width=Math.abs(stop-start)};return StreamLineViewModel});"use strict";angular.module("troutSpotr").factory("GeometryApiService",["$rootScope","$cacheFactory","$http","$q","$timeout",function($rootScope,$cacheFactory,$http,$q,$timeout){function GeometryApiService(){}GeometryApiService.prototype={getRegionGeometries:function(){var deferred=$q.defer();$timeout(function(){var gettingData=$http.get("./data/regionGeometry.json").then(function(response){return response.data});deferred.resolve(gettingData)},1e3);return deferred.promise}};return new GeometryApiService}]);"use strict";angular.module("troutSpotr").factory("BaseModel",function(){function BaseModel(json){if(json){this._fromJSON(json)}}BaseModel.prototype={constructor:BaseModel,_fromJSON:function(json){var key;for(key in json){if(json.hasOwnProperty(key)){this[key]=json[key]}}},toJSON:function(){var hash={};var key;for(key in this){if(this.hasOwnProperty(key)&&typeof this[key]!=="function"){hash[key]=this[key]}}return hash},destroy:function(){var key;for(key in this){if(this.hasOwnProperty(key)){delete this[key]}}}};BaseModel.generateIdomaticName=function(model){return model.type};return BaseModel});"use strict";angular.module("troutSpotr").factory("BaseCollection",["BaseModel",function(BaseModel){function BaseCollection(udefOrArray){this._models=[];if(udefOrArray){this._addAll(udefOrArray)}}BaseCollection.prototype={model:BaseModel,constructor:BaseCollection,_models:null,length:0,toJSON:function(){return this.map(function(model){return model.toJSON()})},toArray:function(){return this._models.slice()},destroy:function(){this.each(function(model){model.destroy()});this._models.length=0;this._models=null},copy:function(arrayOrUndefined){if(arrayOrUndefined){return new this.constructor(arrayOrUndefined)}return new this.constructor(this._models)},_addAll:function(modelData){var i;var len=modelData.length;for(i=0;i<len;i++){this.add(modelData[i])}},add:function(modelData){var instanceModel;if(!(modelData instanceof this.model)){instanceModel=new this.model(modelData)}else{instanceModel=modelData}this._models.push(instanceModel);this.length++;return this.length},remove:function(modelDataOrId){var model;var referenceToModelOrId=modelDataOrId;if(referenceToModelOrId instanceof this.model){model=this._removeByModel(referenceToModelOrId)}else{model=this._removeById(referenceToModelOrId)}if(model&&model!==-1){this.length--}return this.length},empty:function(){this._models.length=0;this.length=0},first:function(){return this._models[0]},sort:function(sortFn){this._models.sort(sortFn)},sortBy:function(key,sortDesc){this.sort(function(modelA,modelB){var a=modelA[key];var b=modelB[key];if(sortDesc){return a>b?-1:a<b?1:0}else{return a<b?-1:a>b?1:0}})},sortByType:function(key,sortDesc,type){if(type==="string"){this.sortByString(key,sortDesc,true)}else if(type==="arrayLength"){this.sortByCount(key,sortDesc)}else if(type==="number"){this.sortByNumber(key,sortDesc)}else{this.sortBy(key,sortDesc)}},sortByString:function(key,sortDesc,useLowercase){this.sort(function(modelA,modelB){var a=modelA[key];var b=modelB[key];if(useLowercase){a=a.toLowerCase();b=b.toLowerCase()}if(sortDesc){return a>b?-1:a<b?1:0}else{return a<b?-1:a>b?1:0}})},sortByCount:function(key,sortDesc){this.sort(function(modelA,modelB){var a=modelA[key]?modelA[key].length:0;var b=modelB[key]?modelB[key].length:0;if(sortDesc){return a>b?-1:a<b?1:0}else{return a<b?-1:a>b?1:0}})},sortByNumber:function(key,sortDesc){this.sort(function(modelA,modelB){var a=modelA[key]?modelA[key]:0;var b=modelB[key]?modelB[key]:0;if(sortDesc){return a>b?-1:a<b?1:0}else{return a<b?-1:a>b?1:0}})},get:function(id){var i=0;var len=this._models.length;for(;i<len;i++){if(this._models[i].id==id){return this._models[i]}}},at:function(index){return this._models[index]},getPage:function(pageNumber,perPage){var startIndex=perPage*(pageNumber-1);var endIndex=startIndex+perPage;if(startIndex>this._models.length-1){return[]}return this._models.slice(startIndex,endIndex)},contains:function(id){var i;var len=this.length;for(i=0;i<len;i++){if(this._models[i].id===id){return true}}return false},merge:function(otherCollection){var self;var removed;var added;if(this.constructor!==otherCollection.constructor){return[]}self=this;removed=[];added=[];this.each(function(element,index){if(!otherCollection.contains(element.id)){this.remove(element.id);removed.push(element.id)}});otherCollection.each(function(element,index){if(!this.contains(element.id)){this.add(element);added.push(element.id)}});return{removed:removed,added:added}},_removeById:function(id){var len=this.length;var i;for(i=0;i<len;i++){if(this._models[i].id===id){return this._models.splice(i,1)}}},_removeByModel:function(model){var len=this.length;var i;for(i=0;i<len;i++){if(this._models[i]===model){return this._models.splice(i,1)}}}};var methods=["forEach","each","map","reduce","find","filter","indexOf"];_.each(methods,function(method){BaseCollection.prototype[method]=function(){var args=Array.prototype.slice.call(arguments);args.unshift(this._models);return _[method].apply(_,args)}});BaseCollection.SORT={TYPE:{ARRAY_LENGTH:"arrayLength",STRING:"string",DATE:"date",NUMBER:"number"}};return BaseCollection}]);"use strict";angular.module("troutSpotr").factory("BaseApiService",["$rootScope","$cacheFactory","$http","$q","$timeout",function($rootScope,$cacheFactory,$http,$q,$timeout){var sessionStorage=window.sessionStorage;var DEBUGGER_LATENCY=800;var globalCache=$cacheFactory("du");function BaseApiService(){this.cache=globalCache}BaseApiService.prototype={cache:null,resetCache:function(){globalCache.removeAll()},logCache:function(){var info=this.cache.info();console.log("cache",info)},doCall:function(data,endpoint,cache){cache=false;var config={url:BaseApiService.API_BASE_PATH+endpoint,params:data,cache:cache,method:"GET"};var deferred=$q.defer();$timeout(function(){var gettingData=$http(config).then(function(response){if(response&&response.data&&response.data.exceptionType){return $q.reject(response.data)}return response.data}).catch(function(reason){return $q.reject(reason)});deferred.resolve(gettingData)},DEBUGGER_LATENCY);return deferred.promise}};BaseApiService.API_BASE_PATH="";return BaseApiService}]);(function(){"use strict";angular.module("troutSpotr").run(runBlock);function runBlock($log){$log.debug("runBlock end")}runBlock.$inject=["$log"]})();(function(){"use strict";angular.module("troutSpotr").config(routerConfig);function routerConfig($stateProvider,$urlRouterProvider){$stateProvider.state("home",{url:"/",templateUrl:"app/ui/main/main.html",controller:"MainController",controllerAs:"main"});$urlRouterProvider.otherwise("/")}routerConfig.$inject=["$stateProvider","$urlRouterProvider"]})();(function(){"use strict";angular.module("troutSpotr")})();(function(){"use strict";angular.module("troutSpotr").config(config);function config($logProvider){$logProvider.debugEnabled(true)}config.$inject=["$logProvider"]})();angular.module("troutSpotr").run(["$templateCache",function($templateCache){$templateCache.put("app/ui/accessPointSummary/AccessPointSummaryTallyTemplate.html",'<svg class="js-tally-root access-point" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewbox="0 0 32 24"></svg>');$templateCache.put("app/ui/accessPointSummary/AccessPointSummaryTemplate.html",'<span class="access-point"><span data-ng-class="{\'hide\': numerator === 0}" class="numerator">{{::numerator}}:</span><span class="denominator">{{::denominator}}</span></span>');$templateCache.put("app/ui/main/main.html",'<div class="container"><div data-mini-map-directive=""></div><div data-stream-list=""></div></div>');$templateCache.put("app/ui/miniMap/minimaptemplate.html",'<div class="somethingContainer" data-ng-class="{\'somethingContainer-major\': minimapState.isMacro}"><div class="js-mini-map something"></div></div>');$templateCache.put("app/ui/restrictions/restrictionlegendtemplate.html",'<ul class="restrictions" data-ng-repeat="restriction in stream.Restrictions"><li><div class="media"><div class="media-hd legend" data-ng-class="{\'stream-line_restriction\': $index === 0, \'stream-line_restriction_secondary\': $index === 1}"></div><span class="media-bd heading">{{restriction.FullText}}</span></div></li></ul>');$templateCache.put("app/ui/restrictions/streamrestrictiontemplate.html",'<ul class="restrictions" data-ng-repeat="restriction in restrictionViewModel.restrictions"><li><div class="media"><div class="media-hd legend {{restriction.cssClass}}"></div><span class="media-bd heading">{{restriction.text}}</span></div></li></ul>');$templateCache.put("app/ui/speciesSummary/speciessummarytemplate.html",'<span class="icon"><svg preserveaspectratio="xMidYMid meet" width="100%" height="100%" viewbox="0 0 16 16" version="1.1" xmlns="http://www.w3.org/2000/svg" class="species"><g><g class="species brown"><circle class="population" data-is-populated="{{::stream.HasBrownTrout}}" data-ng-class="{\'none\': stream.HasBrownTrout === false}" cx="4" cy="12" r="2.5"></circle><circle class="stocking {{stream.HasStockedBrownTrout ? \'stocked\' : \'none\'}}" data-is-stocked="{{::stream.HasStockedBrownTrout}}" cx="4" cy="12" r="2.7"></circle></g><g class="species brook"><circle class="population" data-is-populated="{{::stream.HasBrookTrout}}" data-ng-class="{\'none\': stream.HasBrookTrout === false}" cx="12" cy="12" r="2.5"></circle><circle class="stocking {{stream.HasStockedBrookTrout ? \'stocked\' : \'none\'}}" data-is-stocked="{{::stream.HasStockedBrookTrout}}" cx="12" cy="12" r="2.7"></circle></g><g class="species rainbow"><circle class="population" data-is-populated="{{::stream.HasRainbowTrout}}" data-ng-class="{\'none\': stream.HasRainbowTrout === false}" cx="8" cy="5.0718" r="2.5"></circle><circle class="stocking {{stream.HasStockedRainbowTrout ? \'stocked\' : \'none\'}}" data-is-stocked="{{::stream.HasStockedRainbowTrout}}" cx="8" cy="5.0718" r="2.7"></circle></g></g></svg></span>');$templateCache.put("app/ui/streamLine/streamlinetemplate.html",'<div class="js-stream-line"></div>');$templateCache.put("app/ui/streamList/streamlisttemplate.html",'<div data-ng-cloak="" id="js-list-container"><div data-ng-repeat="region in mapState.selectedRegion | limitTo:1 | orderBy:\'name\'" id="{{::getRegionId(region)}}" data-region-header=""></div></div>');$templateCache.put("app/ui/streamRatio/streamratiotemplate.html",'<svg class="stream-ratio" preserveaspectratio="xMidYMid meet" width="100%" height="100%" viewbox="0 0 16 16" version="1.1" xmlns="http://www.w3.org/2000/svg"><g class="stream-line_route"><circle cx="8" cy="8" ng-attr-r="{{::streamRatio.waterRadius * 2.2}}"></circle></g><g class="stream-ratio_public-land"><circle cx="8" cy="8" ng-attr-r="{{::streamRatio.publicLandRadius * 2.2}}"></circle></g></svg>');$templateCache.put("app/ui/streamList/county/CountyHeaderTemplate.html",'<div fsm-sticky-header="" scroll-body="getCountyScrollBodyId(county)" scroll-stop="23" scroll-object="county" z-index-override="10000" class="sectionTitle region-header">{{::county.name}} Co.</div><div ng-class-odd="\'box\'" ng-class-even="\'box box-secondary\'" data-ng-repeat="stream in ::county.children track by stream.id"><div data-stream-list-item-directive=""></div></div>');$templateCache.put("app/ui/streamList/region/RegionHeaderTemplate.html",'<div fsm-sticky-header="" scroll-body="getRegionScrollBodyId(region)" scroll-stop="0" scroll-object="region" z-index-override="10100" class="sectionTitle region-header"><a id="region-hdr_{{region.id}}" href="#">{{::region.name}} {{displayedCounties.length}} : {{region.children.length}}</a></div><div data-ng-repeat="county in ::region.children track by county.id" id="{{::getCountyId(county)}}" data-county-header=""></div>');$templateCache.put("app/ui/streamList/streamListItem/StreamListItemHeaderTemplate.html",'<div class="header-container"><div data-ng-click="expand()" class="primary"><span data-stream-ratio="" class="icon"></span> <span class="title">{{::stream.Name}}</span></div><div class="details header-container"><div class="icon"><div data-species-summary=""></div></div><div class="icon" data-access-point-summary-tally=""></div><div class="icon"><svg class="alert" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="40%" height="40%" viewbox="0 0 32 32"><path d="M31.858 27.675c-3.196-5.42-11.116-18.857-14.395-24.42-0.987-1.672-1.947-1.641-2.859-0.096-3.223 5.464-11.137 18.878-14.395 24.402-0.004 0.006-0.87 2.439 0.954 2.439h29.561c1.969 0 1.048-2.471 1.134-2.325z"></path><text class="alert-text" x="12" y="25" font-family="Futura" font-size="24">!</text></svg></div></div></div>');$templateCache.put("app/ui/streamList/streamListItem/streamlistitemtemplate.html",'<div class="box" data-stream-id="{{::stream.Id}}"><div><div data-stream-list-item-header=""></div><div data-ng-if="isSmall === false"><div class="containerBody grid-row"><div class="grid-row-col_12of12"><div data-stream-line=""></div></div></div><div class="grid-row"><div class="grid-row-col grid-row-col_9of12 media_list"><div data-ng-if="stream.Restrictions.length > 0" data-restriction-legend=""></div><div data-ng-repeat="accessPoint in stream.AccessPoints | orderBy:\'LinearOffset\':true"><span class="roadIntersectionIndicator" data-ng-class="{\'roadIntersectionIndicator_public\': accessPoint.IsOverOrNearPublicLand}"></span> <span class="roadIntersectionIndicator troutStreamIntersection" data-ng-class="{\'troutStreamIntersection_none\': accessPoint.IsOverOrNearTroutStreamSection === false}"></span> <a class="heading" target="_blank" href="https://www.google.com/maps/@{{accessPoint.Latitude}},{{accessPoint.Longitude}},17z">{{::accessPoint.Name}}</a></div></div><div class="grid-row-col grid-row-col_3of12"><div data-stream-ratio-text=""></div></div></div></div></div></div>')}]);
//# sourceMappingURL=../maps/scripts/app-030d6066e1.js.map
